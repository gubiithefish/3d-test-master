{"version":3,"sources":["Graph.js","App.js","serviceWorker.js","index.js"],"names":["Graph","props","state","d3Data","ref","React","createRef","this","createGraph","dataUrl","prevProps","console","log","width","window","innerWidth","height","innerHeight","maxRadius","Math","min","x","d3","range","PI","clamp","y","lightGreenFirstPalette","map","d","reverse","reduce","a","b","concat","color","partition","arc","startAngle","x0","endAngle","x1","innerRadius","max","y0","outerRadius","y1","middleArcLine","halfPi","angles","r","middleAngle","invertDirection","path","toString","textFits","deltaAngle","perimeter","data","name","length","svg","current","append","style","attr","on","focusOn","transition","duration","tween","xd","domain","yd","t","moveStackToFront","elD","selectAll","filter","each","parentNode","appendChild","parent","attrTween","error","root","sum","size","slice","descendants","exit","remove","newSlice","enter","stopPropagation","text","mail","children","_","i","setState","id","Component","App","changeUrl","document","getElementById","innerHTML","clearBox","lol","getElementsByClassName","visibleMailsToConsole","slices","querySelectorAll","forEach","call","p","attributes","value","clearMailBox","mikkuelsprogram","onClick","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3d963b53.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3v4';\n\nexport default class Graph extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { d3Data: '' };\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        this.createGraph(this.props.dataUrl);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dataUrl !== this.props.dataUrl) {\n            console.log('url changed2');\n            this.createGraph(this.props.dataUrl);\n        }\n    }\n\n    createGraph(dataUrl) {\n        const width = window.innerWidth,\n            height = window.innerHeight,\n            maxRadius = Math.min(width, height) / 2 - 5;\n\n        const formatNumber = d3.format(',d');\n\n        const x = d3\n            .scaleLinear()\n            .range([0, 2 * Math.PI])\n            .clamp(true);\n\n        const y = d3.scaleSqrt().range([maxRadius * 0.1, maxRadius]);\n\n        // sunlight style guide network colors\n        // https://github.com/amycesal/dataviz-style-guide/blob/master/Sunlight-StyleGuide-DataViz.pdf\n        const dark = [\n            '#B08B12',\n            '#BA5F06',\n            '#8C3B00',\n            '#6D191B',\n            '#842854',\n            '#5F7186',\n            '#193556',\n            '#137B80',\n            '#144847',\n            '#254E00'\n        ];\n\n        const mid = [\n            '#E3BA22',\n            '#E58429',\n            '#BD2D28',\n            '#D15A86',\n            '#8E6C8A',\n            '#6B99A1',\n            '#42A5B3',\n            '#0F8C79',\n            '#6BBBA1',\n            '#5C8100'\n        ];\n\n        const light = [\n            '#F2DA57',\n            '#F6B656',\n            '#E25A42',\n            '#DCBDCF',\n            '#B396AD',\n            '#B0CBDB',\n            '#33B6D0',\n            '#7ABFCC',\n            '#C8D7A1',\n            '#A0B700'\n        ];\n\n        const palettes = [light, mid, dark];\n        const lightGreenFirstPalette = palettes\n            .map(d => d.reverse())\n            .reduce((a, b) => a.concat(b));\n\n        const color = d3.scaleOrdinal(lightGreenFirstPalette);\n\n        const partition = d3.partition();\n\n        const arc = d3\n            .arc()\n            .startAngle(d => x(d.x0))\n            .endAngle(d => x(d.x1))\n            .innerRadius(d => Math.max(0, y(d.y0)))\n            .outerRadius(d => Math.max(0, y(d.y1)));\n\n        const middleArcLine = d => {\n            const halfPi = Math.PI / 2;\n            const angles = [x(d.x0) - halfPi, x(d.x1) - halfPi];\n            const r = Math.max(0, (y(d.y0) + y(d.y1)) / 2);\n\n            const middleAngle = (angles[1] + angles[0]) / 2;\n            const invertDirection = middleAngle > 0 && middleAngle < Math.PI; // On lower quadrants write text ccw\n            if (invertDirection) {\n                angles.reverse();\n            }\n\n            const path = d3.path();\n            path.arc(0, 0, r, angles[0], angles[1], invertDirection);\n            return path.toString();\n        };\n\n        const textFits = d => {\n            const CHAR_SPACE = 4;\n\n            const deltaAngle = x(d.x1) - x(d.x0);\n            const r = Math.max(0, (y(d.y0) + y(d.y1)) / 2);\n            const perimeter = r * deltaAngle;\n\n            return d.data.name.length * CHAR_SPACE < perimeter;\n        };\n\n        const svg = d3\n            .select(this.ref.current)\n            .append('svg')\n            .style('width', '99vw')\n            .style('height', '95vh')\n            .attr('viewBox', `${-width / 2} ${-height / 2} ${width} ${height}`)\n            .on('click', () => focusOn()); // Reset zoom on canvas click\n\n        d3.json(\n            dataUrl,\n            (error, root) => {\n                if (error) throw error;\n\n                root = d3.hierarchy(root);\n                root.sum(d => d.size);\n\n                const slice = svg.selectAll('g.slice').data(partition(root).descendants());\n\n                slice.exit().remove();\n\n                const newSlice = slice\n                    .enter()\n                    .append('g')\n                    .attr('class', 'slice')\n                    .on('click', d => {\n                        d3.event.stopPropagation();\n                        focusOn(d);\n                    });\n\n                newSlice\n                    .append('title')\n                    .attr('class', 'email')\n                    //.text(d => d.data.name + '\\n' + formatNumber(d.value));\n                    .text(d => d.data.mail);\n\n                newSlice\n                    .append('path')\n                    .attr('class', 'main-arc')\n                    .style('fill', d => color((d.children ? d : d.parent).data.name))\n                    .attr('d', arc);\n\n                newSlice\n                    .append('path')\n                    .attr('class', 'hidden-arc')\n                    .attr('id', (_, i) => `hiddenArc${i}`)\n                    .attr('d', middleArcLine);\n\n                const text = newSlice\n                    .append('text')\n                    .attr('display', d => (textFits(d) ? null : 'none'))\n                    .attr('email', d => d.data.mail);\n\n                // Add white contour\n                text\n                    .append('textPath')\n                    .attr('startOffset', '50%')\n                    .attr('xlink:href', (_, i) => `#hiddenArc${i}`)\n                    .text(d => d.data.name)\n                    .style('fill', 'none')\n                    .style('stroke', '#E5E2E0')\n                    .style('stroke-width', 12)\n                    .style('stroke-linejoin', 'round');\n\n                text\n                    .append('textPath')\n                    .attr('startOffset', '50%')\n                    .attr('xlink:href', (_, i) => `#hiddenArc${i}`)\n                    .text(d => d.data.name);\n            }\n        );\n\n        function focusOn(d = { x0: 0, x1: 1, y0: 0, y1: 1 }) {\n            // Reset to top-level if no data point specified\n\n            const transition = svg\n                .transition()\n                .duration(750)\n                .tween('scale', () => {\n                    const xd = d3.interpolate(x.domain(), [d.x0, d.x1]),\n                        yd = d3.interpolate(y.domain(), [d.y0, 1]);\n                    return t => {\n                        x.domain(xd(t));\n                        y.domain(yd(t));\n                    };\n                });\n\n            transition.selectAll('path.main-arc').attrTween('d', d => () => arc(d));\n\n            transition\n                .selectAll('path.hidden-arc')\n                .attrTween('d', d => () => middleArcLine(d));\n\n            transition\n                .selectAll('text')\n                .attrTween('display', d => () => (textFits(d) ? null : 'none'));\n\n            moveStackToFront(d);\n\n            //\n\n            function moveStackToFront(elD) {\n                svg\n                    .selectAll('.slice')\n                    .filter(d => d === elD)\n                    .each(function (d) {\n                        this.parentNode.appendChild(this);\n                        if (d.parent) {\n                            moveStackToFront(d.parent);\n                        }\n                    });\n            }\n        }\n        this.setState()\n    }\n\n    render() {\n        return (\n            <div>\n                <div ref={this.ref} id='d3node'></div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Graph from './Graph';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataUrl: 'https://gist.githubusercontent.com/gubiithefish/ec1f7d35256ffd350da65a873025d2f6/raw/9233286e8c4c23ab6c786a6709a2795ef6a8b7d4/first.json'\n    }\n  }\n\n  changeUrl = () => {\n    document.getElementById(\"d3node\").innerHTML = \"\";\n    this.setState({dataUrl : 'https://gist.githubusercontent.com/gubiithefish/0b40cc51481c16d737c698ccaf7f3996/raw/29f85e058a3bee8d9575baff09de64913e7076f0/second.json'})\n  }\n\n  clearBox = () => {\n    document.getElementById(\"d3node\").innerHTML = \"\";\n    this.setState({dataUrl : 'https://gist.githubusercontent.com/gubiithefish/ec1f7d35256ffd350da65a873025d2f6/raw/9233286e8c4c23ab6c786a6709a2795ef6a8b7d4/first.json'})\n  }\n\n  lol = () => {\n    //console.log(document.getElementById(\"d3node\").childNodes[0].childElementCount)\n    console.log(document.getElementsByClassName('email')[0].innerHTML)\n  }\n\n  visibleMailsToConsole = () => {\n    const slices = document.querySelectorAll('text[email][display]:not([display=\"none\"])');\n    var t = \"\";\n    [].forEach.call(slices, function(slice) {\n      var p = \"<p>\" + slice.attributes[1].value;\n      p += \"</p>\";\n      t += p;\n    });\n    document.getElementById(\"mainz\").innerHTML += t;\n  }\n\n  clearMailBox = () => {\n    document.getElementById(\"mainz\").innerHTML = \"\";\n    }\n\n    mikkuelsprogram = () => {\n  for (var i=0 ; i < 2737; i++){\n    console.log(\"næ\")\n}}\n\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => this.changeUrl()} >Example1</button>\n        <button onClick={() => this.clearBox()} >Example2</button>\n        <button onClick={() => this.lol()} >count</button>\n        <button onClick={() => this.mikkuelsprogram()} >Done</button>\n        <button onClick={() => this.visibleMailsToConsole()} >Log visible emails</button>\n        <button onClick={() => this.clearMailBox()} >Clear mails</button>\n        <Graph dataUrl={this.state.dataUrl} />\n\n        <main id=\"mainz\">\n\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}